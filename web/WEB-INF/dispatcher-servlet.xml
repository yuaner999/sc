<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
    <!--指明 controller 所在包，并扫描其中的注解-->
    <context:component-scan base-package="com"/>

    <!-- 静态资源(js、image等)的访问 -->
    <mvc:default-servlet-handler />

    <!-- 开启注解 -->
    <mvc:annotation-driven/>

    <!--mybatis   sart-->
    <!-- 数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="username" value="secondcourse">
        </property>
        <property name="password" value="secondcourse.com">
        </property>
        <property name="driverClassName" value="com.mysql.jdbc.Driver">
        </property>
        <property name="url" value="jdbc:mysql://192.168.0.166:3306/secondcourse?useUnicode=true&amp;characterEncoding=utf-8&amp;autoReconnect=true&amp;failOverReadOnly=false">
        </property>
    </bean>

    <!--邮件账号配置-->
    <util:properties id="email_config">
        <prop key="acc">secondcourse_admin@163.com</prop>
        <prop key="pwd">chongfu123</prop>
        <prop key="smtp">smtp.163.com</prop>
        <!--邮件中链接地址里的域名部分，不包括后面的/，如：http://localhost:8080-->
        <prop key="url">http://sct.neu.edu.cn</prop>
    </util:properties>
    <!--上传文件、图片路径设置 如果不配置，请填入 ‘*’号。这样会采用默认的配置 -->
    <util:properties id="upload_config">
        <!--默认配置  项目地址 +"Files/Files";文件-->
        <prop key="file_dir">*</prop>
        <!--默认配置  项目地址 +"Files/Images";图片-->
        <prop key="img_dir">*</prop>
        <!--默认配置  项目地址 +"/asset/attached/";编辑器中上传的文档、图片、视频等-->
        <prop key="editor_dir">*</prop>
    </util:properties>
     <!--数据同步配置  学生处网站的域名-->
    <util:properties id="copy_url">
        <prop key="url">http://192.168.27.109:8081</prop>
    </util:properties>
    <!-- sql session Factory-->
    <bean id="ssf" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource">
        </property>
        <property name="mapperLocations" value="classpath:com/dao/sql/*.xml">
        </property>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            dialect=mysql
                            reasonable=true
                            pageSizeZero=true
                            rowBoundsWithCount=true
                            offsetAsPageNum=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描包下接口生成实现 -->
        <property name="basePackage" value="com.dao.interfaces">
        </property>
        <!-- 自动注入ssf -->
    </bean>
    <!-- 事务管理 -->
    <bean id="transaction" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 开启事务管理 -->
    <tx:annotation-driven transaction-manager="transaction"/>
    <!--mybatis    end-->

    <!--ViewResolver 视图解析器-->
    <!--用于支持Servlet、JSP视图解析-->
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 用于将对象转换为 JSON  -->
    <bean id="stringConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="stringConverter" />
                <ref bean="jsonConverter" />
            </list>
        </property>
    </bean>

    <!--解决Controller中@ResponseBody返回的汉字为？问题-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value = "text/plain;charset=UTF-8" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!--开启定时任务-->
    <task:annotation-driven />
    <!--配置拦截器, 多个拦截器,顺序执行 -->
    <!--<mvc:interceptors>-->
    <!--<mvc:interceptor>-->
    <!--<mvc:mapping path="/user/**" />-->
    <!--<mvc:mapping path="/jsons/getStudentHomework.form" />-->
    <!--<mvc:mapping path="/test/**" />-->
    <!--<bean class="com.interceptors.PrivegeInterceptor"></bean>-->
    <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->

    <!--<mvc:interceptors>-->
        <!--&lt;!&ndash; 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 &ndash;&gt;-->
        <!--<bean class="com.interceptors.PrivilegeInterceptor"/>-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/test/number.do"/>-->
            <!--&lt;!&ndash; 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 &ndash;&gt;-->
            <!--<bean class="com.interceptors.PrivilegeInterceptor"/>-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->

    <bean id="utf8Charset" class="java.nio.charset.Charset" factory-method="forName">
        <constructor-arg value="UTF-8"/>
    </bean>

    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg ref="utf8Charset"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

</beans>